{
	"name": "@polyfiller/ecma-262",
	"version": "0.0.33",
	"description": "An implementation of the ECMAScriptÂ® Language Specification",
	"scripts": {
		"scaffold": "scaffold readme --yes && scaffold license --yes",
		"clean": "rimraf dist && rimraf polyfill",
		"lint": "tsc --noEmit && eslint \"src/**/*.ts\" --color",
		"prebuild": "pnpm run clean",
		"build": "pnpm run rollup",
		"build:test262": "node --max-old-space-size=8192 node_modules/rollup/dist/bin/rollup -c rollup.test262.config.ts",
		"prewatch": "pnpm run prebuild",
		"watch": "pnpm run rollup -- --watch",
		"pretest": "if [[ -z \"${SKIP_BUILD}\" ]] || test \"$SKIP_BUILD\" = \"false\"; then pnpm run build:test262; fi",
		"test": "pnpx test262",
		"posttest": "rimraf test262-polyfill.js",
		"rollup": "node --max-old-space-size=8192 node_modules/rollup/dist/bin/rollup -c rollup.config.ts",
		"prepublishOnly": "npm run lint && pnpm run build",
		"update": "pnpx npm-check-updates --packageFile package.json -u -x np --dep dev,prod"
	},
	"homepage": "https://github.com/polyfiller-org/library",
	"repository": {
		"type": "git",
		"url": "https://github.com/polyfiller-org/library.git"
	},
	"bugs": {
		"url": "https://github.com/polyfiller-org/library/issues"
	},
	"files": [
		"dist/**/*.*",
		"polyfill/**/*.*"
	],
	"keywords": [
		"object-fit",
		"object-position",
		"polyfill",
		"css"
	],
	"contributors": [
		{
			"name": "Frederik Wessberg",
			"email": "frederikwessberg@hotmail.com",
			"url": "https://github.com/wessberg",
			"imageUrl": "https://avatars2.githubusercontent.com/u/20454213?s=460&v=4",
			"role": "Lead Developer",
			"github": "wessberg",
			"twitter": "FredWessberg"
		}
	],
	"license": "MIT",
	"devDependencies": {
		"@polyfiller/build": "workspace:*",
		"@polyfiller/config": "workspace:*",
		"@polyfiller/test262": "workspace:*",
		"@babel/runtime": "^7.11.2",
		"@babel/core": "^7.11.6",
		"@babel/parser": "^7.11.5",
		"@babel/plugin-transform-typeof-symbol": "^7.10.4",
		"rimraf": "^3.0.2",
		"rollup": "^2.28.2",
		"typescript": "^4.0.3"
	},
	"dependencies": {},
	"main": "./dist/cjs/index.js",
	"module": "./dist/esm/index.js",
	"types": "./dist/esm/index.d.ts",
	"typings": "./dist/esm/index.d.ts",
	"es2015": "./dist/esm/index.js",
	"test262": {
		"prelude": "./test262-polyfill.js",
		"glob": [
			{
				"glob": "built-ins/RegExp/CharacterClassEscapes/character-class-non-digit-class-escape-plus-quantifier.js",
				"preprocessor": "./test262-preprocessor.js"
			},
			"built-ins/Function/prototype/toString/symbol-named-builtins.js",
			"built-ins/Function/**/!(derived-this-uninitialized-realm|argarray-not-object-realm).*",
			{
				"glob": "built-ins/Symbol/**/!(cross-realm|arg-non-symbol).*",
				"preprocessor": "./test262-preprocessor.js"
			},
			"built-ins/Set/**/*.*",
			"built-ins/Map/**/*.*",
			"built-ins/Object/**/*.*",
			"built-ins/Array/**/*.*"
		]
	},
	"polyfills": {
		"es": {
			"input": "./src/polyfill/index.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/index.js",
					"minified": "./polyfill/index.min.js"
				},
				"bundle": {
					"standard": "./polyfill/index.bundle.js",
					"minified": "./polyfill/index.bundle.min.js"
				}
			}
		},
		"es.symbol": {
			"input": "./src/polyfill/symbol/index.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/symbol.js",
					"minified": "./polyfill/symbol.min.js"
				}
			}
		},
		"es.symbol.async-iterator": {
			"input": "./src/polyfill/symbol/async-iterator.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/symbol.async-iterator.js",
					"minified": "./polyfill/symbol.async-iterator.min.js"
				}
			}
		},
		"es.symbol.constructor": {
			"input": "./src/polyfill/symbol/constructor.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/symbol.constructor.js",
					"minified": "./polyfill/symbol.constructor.min.js"
				}
			}
		},
		"es.symbol.for": {
			"input": "./src/polyfill/symbol/for.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/symbol.for.js",
					"minified": "./polyfill/symbol.for.min.js"
				}
			}
		},
		"es.symbol.has-instance": {
			"input": "./src/polyfill/symbol/has-instance.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/symbol.has-instance.js",
					"minified": "./polyfill/symbol.has-instance.min.js"
				}
			}
		},
		"es.symbol.is-concat-spreadable": {
			"input": "./src/polyfill/symbol/is-concat-spreadable.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/symbol.is-concat-spreadable.js",
					"minified": "./polyfill/symbol.is-concat-spreadable.min.js"
				}
			}
		},
		"es.symbol.iterator": {
			"input": "./src/polyfill/symbol/iterator.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/symbol.iterator.js",
					"minified": "./polyfill/symbol.iterator.min.js"
				}
			}
		},
		"es.symbol.key-for": {
			"input": "./src/polyfill/symbol/key-for.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/symbol.key-for.js",
					"minified": "./polyfill/symbol.key-for.min.js"
				}
			}
		},
		"es.symbol.match": {
			"input": "./src/polyfill/symbol/match.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/symbol.match.js",
					"minified": "./polyfill/symbol.match.min.js"
				}
			}
		},
		"es.symbol.match-all": {
			"input": "./src/polyfill/symbol/match-all.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/symbol.match-all.js",
					"minified": "./polyfill/symbol.match-all.min.js"
				}
			}
		},
		"es.symbol.replace": {
			"input": "./src/polyfill/symbol/replace.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/symbol.replace.js",
					"minified": "./polyfill/symbol.replace.min.js"
				}
			}
		},
		"es.symbol.search": {
			"input": "./src/polyfill/symbol/search.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/symbol.search.js",
					"minified": "./polyfill/symbol.search.min.js"
				}
			}
		},
		"es.symbol.species": {
			"input": "./src/polyfill/symbol/species.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/symbol.species.js",
					"minified": "./polyfill/symbol.species.min.js"
				}
			}
		},
		"es.symbol.split": {
			"input": "./src/polyfill/symbol/split.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/symbol.split.js",
					"minified": "./polyfill/symbol.split.min.js"
				}
			}
		},
		"es.symbol.to-primitive": {
			"input": "./src/polyfill/symbol/to-primitive.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/symbol.to-primitive.js",
					"minified": "./polyfill/symbol.to-primitive.min.js"
				}
			}
		},
		"es.symbol.to-string-tag": {
			"input": "./src/polyfill/symbol/to-string-tag.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/symbol.to-string-tag.js",
					"minified": "./polyfill/symbol.to-string-tag.min.js"
				}
			}
		},
		"es.symbol.unscopables": {
			"input": "./src/polyfill/symbol/unscopables.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/symbol.unscopables.js",
					"minified": "./polyfill/symbol.unscopables.min.js"
				}
			}
		},
		"es.symbol.prototype.@@to-primitive": {
			"input": "./src/polyfill/symbol/prototype/@@to-primitive.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/symbol.prototype.@@to-primitive.js",
					"minified": "./polyfill/symbol.prototype.@@to-primitive.min.js"
				}
			}
		},
		"es.symbol.prototype.@@to-string-tag": {
			"input": "./src/polyfill/symbol/prototype/@@to-string-tag.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/symbol.prototype.@@to-string-tag.js",
					"minified": "./polyfill/symbol.prototype.@@to-string-tag.min.js"
				}
			}
		},
		"es.symbol.prototype.description": {
			"input": "./src/polyfill/symbol/prototype/description.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/symbol.prototype.description.js",
					"minified": "./polyfill/symbol.prototype.description.min.js"
				}
			}
		},
		"es.symbol.prototype.to-string": {
			"input": "./src/polyfill/symbol/prototype/to-string.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/symbol.prototype.to-string.js",
					"minified": "./polyfill/symbol.prototype.to-string.min.js"
				}
			}
		},
		"es.symbol.prototype.value-of": {
			"input": "./src/polyfill/symbol/prototype/value-of.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/symbol.prototype.value-of.js",
					"minified": "./polyfill/symbol.prototype.value-of.min.js"
				}
			}
		},
		"es.array": {
			"input": "./src/polyfill/array/index.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.js",
					"minified": "./polyfill/array.min.js"
				}
			}
		},
		"es.array.@@species": {
			"input": "./src/polyfill/array/@@species.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.@@species.js",
					"minified": "./polyfill/array.@@species.min.js"
				}
			}
		},
		"es.array.from": {
			"input": "./src/polyfill/array/from.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.from.js",
					"minified": "./polyfill/array.from.min.js"
				}
			}
		},
		"es.array.is-array": {
			"input": "./src/polyfill/array/is-array.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.is-array.js",
					"minified": "./polyfill/array.is-array.min.js"
				}
			}
		},
		"es.array.of": {
			"input": "./src/polyfill/array/of.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.of.js",
					"minified": "./polyfill/array.of.min.js"
				}
			}
		},
		"es.array.prototype.@@iterator": {
			"input": "./src/polyfill/array/prototype/@@iterator.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.@@iterator.js",
					"minified": "./polyfill/array.prototype.@@iterator.min.js"
				}
			}
		},
		"es.array.prototype.@@unscopables": {
			"input": "./src/polyfill/array/prototype/@@unscopables.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.@@unscopables.js",
					"minified": "./polyfill/array.prototype.@@unscopables.min.js"
				}
			}
		},
		"es.array.prototype.concat": {
			"input": "./src/polyfill/array/prototype/concat.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.concat.js",
					"minified": "./polyfill/array.prototype.concat.min.js"
				}
			}
		},
		"es.array.prototype.copy-within": {
			"input": "./src/polyfill/array/prototype/copy-within.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.copy-within.js",
					"minified": "./polyfill/array.prototype.copy-within.min.js"
				}
			}
		},
		"es.array.prototype.entries": {
			"input": "./src/polyfill/array/prototype/entries.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.entries.js",
					"minified": "./polyfill/array.prototype.entries.min.js"
				}
			}
		},
		"es.array.prototype.every": {
			"input": "./src/polyfill/array/prototype/every.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.every.js",
					"minified": "./polyfill/array.prototype.every.min.js"
				}
			}
		},
		"es.array.prototype.fill": {
			"input": "./src/polyfill/array/prototype/fill.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.fill.js",
					"minified": "./polyfill/array.prototype.fill.min.js"
				}
			}
		},
		"es.array.prototype.filter": {
			"input": "./src/polyfill/array/prototype/filter.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.filter.js",
					"minified": "./polyfill/array.prototype.filter.min.js"
				}
			}
		},
		"es.array.prototype.find": {
			"input": "./src/polyfill/array/prototype/find.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.find.js",
					"minified": "./polyfill/array.prototype.find.min.js"
				}
			}
		},
		"es.array.prototype.find-index": {
			"input": "./src/polyfill/array/prototype/find-index.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.find-index.js",
					"minified": "./polyfill/array.prototype.find-index.min.js"
				}
			}
		},
		"es.array.prototype.flat": {
			"input": "./src/polyfill/array/prototype/flat.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.flat.js",
					"minified": "./polyfill/array.prototype.flat.min.js"
				}
			}
		},
		"es.array.prototype.flat-map": {
			"input": "./src/polyfill/array/prototype/flat-map.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.flat-map.js",
					"minified": "./polyfill/array.prototype.flat-map.min.js"
				}
			}
		},
		"es.array.prototype.for-each": {
			"input": "./src/polyfill/array/prototype/for-each.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.for-each.js",
					"minified": "./polyfill/array.prototype.for-each.min.js"
				}
			}
		},
		"es.array.prototype.includes": {
			"input": "./src/polyfill/array/prototype/includes.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.includes.js",
					"minified": "./polyfill/array.prototype.includes.min.js"
				}
			}
		},
		"es.array.prototype.index-of": {
			"input": "./src/polyfill/array/prototype/index-of.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.index-of.js",
					"minified": "./polyfill/array.prototype.index-of.min.js"
				}
			}
		},
		"es.array.prototype.join": {
			"input": "./src/polyfill/array/prototype/join.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.join.js",
					"minified": "./polyfill/array.prototype.join.min.js"
				}
			}
		},
		"es.array.prototype.keys": {
			"input": "./src/polyfill/array/prototype/keys.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.keys.js",
					"minified": "./polyfill/array.prototype.keys.min.js"
				}
			}
		},
		"es.array.prototype.last-index-of": {
			"input": "./src/polyfill/array/prototype/last-index-of.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.last-index-of.js",
					"minified": "./polyfill/array.prototype.last-index-of.min.js"
				}
			}
		},
		"es.array.prototype.map": {
			"input": "./src/polyfill/array/prototype/map.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.map.js",
					"minified": "./polyfill/array.prototype.map.min.js"
				}
			}
		},
		"es.array.prototype.pop": {
			"input": "./src/polyfill/array/prototype/pop.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.pop.js",
					"minified": "./polyfill/array.prototype.pop.min.js"
				}
			}
		},
		"es.array.prototype.push": {
			"input": "./src/polyfill/array/prototype/push.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.push.js",
					"minified": "./polyfill/array.prototype.push.min.js"
				}
			}
		},
		"es.array.prototype.reduce": {
			"input": "./src/polyfill/array/prototype/reduce.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.reduce.js",
					"minified": "./polyfill/array.prototype.reduce.min.js"
				}
			}
		},
		"es.array.prototype.reduce-right": {
			"input": "./src/polyfill/array/prototype/reduce-right.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.reduce-right.js",
					"minified": "./polyfill/array.prototype.reduce-right.min.js"
				}
			}
		},
		"es.array.prototype.reverse": {
			"input": "./src/polyfill/array/prototype/reverse.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.reverse.js",
					"minified": "./polyfill/array.prototype.reverse.min.js"
				}
			}
		},
		"es.array.prototype.shift": {
			"input": "./src/polyfill/array/prototype/shift.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.shift.js",
					"minified": "./polyfill/array.prototype.shift.min.js"
				}
			}
		},
		"es.array.prototype.slice": {
			"input": "./src/polyfill/array/prototype/slice.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.slice.js",
					"minified": "./polyfill/array.prototype.slice.min.js"
				}
			}
		},
		"es.array.prototype.some": {
			"input": "./src/polyfill/array/prototype/some.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.some.js",
					"minified": "./polyfill/array.prototype.some.min.js"
				}
			}
		},
		"es.array.prototype.sort": {
			"input": "./src/polyfill/array/prototype/sort.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.sort.js",
					"minified": "./polyfill/array.prototype.sort.min.js"
				}
			}
		},
		"es.array.prototype.splice": {
			"input": "./src/polyfill/array/prototype/splice.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.splice.js",
					"minified": "./polyfill/array.prototype.splice.min.js"
				}
			}
		},
		"es.array.prototype.to-locale-string": {
			"input": "./src/polyfill/array/prototype/to-locale-string.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.to-locale-string.js",
					"minified": "./polyfill/array.prototype.to-locale-string.min.js"
				}
			}
		},
		"es.array.prototype.to-string": {
			"input": "./src/polyfill/array/prototype/to-string.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.to-string.js",
					"minified": "./polyfill/array.prototype.to-string.min.js"
				}
			}
		},
		"es.array.prototype.unshift": {
			"input": "./src/polyfill/array/prototype/unshift.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.unshift.js",
					"minified": "./polyfill/array.prototype.unshift.min.js"
				}
			}
		},
		"es.array.prototype.values": {
			"input": "./src/polyfill/array/prototype/values.ts",
			"output": {
				"esm": {
					"standard": "./polyfill/array.prototype.values.js",
					"minified": "./polyfill/array.prototype.values.min.js"
				}
			}
		}
	}
}
